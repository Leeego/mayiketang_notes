						   纯手写ArrayList集合框架(数组+扩容技术)
集合框架介绍
  1.所有集合类都位于java.util包下。java的集合类主要由两个接口派生而出:Collection和Map,
    <Collection>和<Map>是java集合框架的<根接口>,这两个接口又包含了一些子接口或实现类。
  2.集合接口:6个接口,表示不同集合类型,是集合框架的基础。  
  3.抽象类:5个抽象类,对集合接口的部分实现。可扩展为自定义集合类。
  4.实现类:8个实现类,对接口的具体实现。
  5.Collection接口是一组允许重复的对象。
  6.Set接口继承Collection,集合元素不重复。
  7.List接口继承Collection,允许重复,维护元素插入顺序。
  8.Map接口是键-值对象,与Collection接口没有什么关系。
  9.Set、List和Map可以看做集合三大类:
    
  List集合是<有序>集合,集合中的元素<可以><重复>,访问集合中的元素可以根据元素的<索引>来访问。
  Set集合是<无序>集合,集合中的元素<不可以><重复>,访问集合中的元素只能根据<元素本身>来访问（也是集合里元素不允许重复的原因）。
  Map集合中保存Key-Value对形式的元素,访问时只能根据每项元素的<key>来访问其value。
 
=======================================================
List框架接口
  List集合代表一个<有序集合>,集合中每个元素都有其对应的<顺序索引>。List集合允许使用重复元素,可以通过索引来访问指定位置的集合元素。
  List 接口继承于 Collection 接口，它可以定义一个允许重复的有序集合。因为 List 中的元素是有序的，所以我们可以通过使用索引（元素在 List 中的位置，类似于数组下标）来访问 List 中的元素，这类似于 Java 的数组。
  List 接口为 Collection 直接接口。List 所代表的是有序的 Collection，即它用某种特定的插入顺序来维护元素顺序。用户可以对列表中每个元素的插入位置进行精确地控制，同时可以根据元素的整数索引（在列表中的位置）访问元素，并搜索列表中的元素。实现 List 接口的集合主要有：ArrayList、LinkedList、《Vector》、《Stack》。

=======================================================
ArrayList 核心代码
  .ArrayList底层基于<数组>实现
      private Object[] elementData;
  .ArrayList底层默认<数组>初始化大小为<10>个<object数组>
  .添加元素后大于当前数组的长度,则进行扩容,将数组的长度增加原来数组的<一半>。

=======================================================
最后总结
  1.它底层使用的是数组进行增删查。会定义全局变量size,当增加元素时,执行size++,当删除元素时,size--。这个size就是实际的集合大小。
  2.Add 方法实现原理判断实际要存放的容量是否大于 elementData 数组的容量。如果大于则进行扩容，若小于则进行插入。插入时，要将该下标后面的数据全部后移。
  3.Arraylist 的 Get 方法实现原理:
    根据传入的下标，到数组中进行查找。当然前提是下标值必须小于 size。




http://bbs.itmayiedu.com/article/1528298563476




































