                                 	浅谈 web 网站架构演变过程
1、阶段一：单机构建网站(所有软件都装载同一台机器上)
2、阶段二：应用服务器与数据库分离(此时我们可以把数据库，web 服务器拆分开来，这样不仅提高了单台机器的负载能力，也提高了容灾能力)
3、阶段三：应用服务器集群(我们可以把应用服务器从一台变成了两台甚至多台，把用户的请求分散到不同的服务器中，从而提高负载能力。多台应用服务器之间没有直接的交互，他们都是依赖数据库各自对外提供服务。)
重点：著名的做故障切换的软件有 keepalived，keepalived 是一个类似于 layer3、4、7 交换机制的软件，他不是某个具体软件故障切换的专属品，而是可以适用于各种软件的一款产品。keepalived 配合上 ipvsadm 又可以做负载均衡，可谓是神器。
-----
系统演变到这里，将会出现下面四个问题：

1.用户的请求由谁来转发到到具体的应用服务器
2.有什么转发的算法
3.应用服务器如何返回用户的请求
4.用户如果每次访问到的服务器不一样，那么如何维护 session 的一致性
我们来看看解决问题的方案：
1、第一个问题即是负载均衡的问题，一般有 5 种解决方案：
1、http 重定向。HTTP 重定向就是应用层的请求转发。用户的请求其实已经到了 HTTP 重定向负载均衡服务器，服务器根据算法要求用户重定向，用户收到重定向请求后，再次请求真正的集群

　　　　　　优点：简单。

　　　　　　缺点：性能较差。

2、DNS 域名解析负载均衡。DNS 域名解析负载均衡就是在用户请求 DNS 服务器，获取域名对应的 IP 地址时，DNS 服务器直接给出负载均衡后的服务器 IP。

　　　　　　优点：交给 DNS，不用我们去维护负载均衡服务器。

　　　　　　缺点：当一个应用服务器挂了，不能及时通知 DNS，而且 DNS 负载均衡的控制权在域名服务商那里，网站无法做更多的改善和更强大的管理。

3、反向代理服务器。在用户的请求到达反向代理服务器时（已经到达网站机房），由反向代理服务器根据算法转发到具体的服务器。常用的 apache，nginx 都可以充当反向代理服务器。

　　　　　　优点：部署简单。

　　　　　　缺点：代理服务器可能成为性能的瓶颈，特别是一次上传大文件。

4、IP 层负载均衡。在请求到达负载均衡器后，负载均衡器通过修改请求的目的 IP 地址，从而实现请求的转发，做到负载均衡。

　　　　　　优点：性能更好。

　　　　　　缺点：负载均衡器的宽带成为瓶颈。

5、数据链路层负载均衡。在请求到达负载均衡器后，负载均衡器通过修改请求的 mac 地址，从而做到负载均衡，与 IP 负载均衡不一样的是，当请求访问完服务器之后，直接返回客户。而无需再经过负载均衡器。

2、第二个问题即是《集群调度算法》问题，常见的调度算法有 10 种。
1、rr轮询调度算法。   -------轮询分发请求。
   优点:实现简单
   缺点:不考虑每台服务器的处理能力
2、wrr加权调度算法。  -------给每台服务器设置权值weight,负载均衡调度器根据权值调度服务器,服务器被调用的次数跟权值成正比。
   优点:考虑了服务器处理能力的不同。
3、sh原地址散列。     -------提取用户IP,根据散列函数得出一个Key,再根据静态映射表,查出对应的value,即目标服务器IP。如果目标服务器超负荷,则返回空。
4、dh目标地址散列     -------同上,只是现在提取的是目标地址的IP来做哈希。
5、lc最少连接         -------优先把请求转发给连接数少的服务器。
   优点:使得集群中各个服务器的负载更加均匀。
6、wlc加权最少连接    -------在lc基础上,为每台服务器加上权值。算法为:（活动连接数*256+ 非活动连接数）÷权重 ，计算出来的值小的服务器优先被选择。
   优点：可以根据服务器的能力分配请求。
7、sed最短期望延迟    -------其实 sed 跟 wlc 类似，区别是不考虑非活动连接数。算法为：（活动连接数 +1)*256÷权重，同样计算出来的值小的服务器优先被选择。
8、nq永不排队         -------改进的 sed 算法。我们想一下什么情况下才能“永不排队”，那就是服务器的连接数为 0 的时候，那么假如有服务器连接数为 0，均衡器直接把请求转发给它，无需经过 sed 的计算。
9、LBLC 基于局部性的最少连接-------均衡器根据请求的目的 IP 地址，找出该 IP 地址最近被使用的服务器，把请求转发之，若该服务器超载，最采用最少连接数算法。
10、LBLCR 带复制的基于局部性的最少连接------均衡器根据请求的目的 IP 地址，找出该 IP 地址最近使用的“服务器组”，注意，并不是具体某个服务器，然后采用最少连接数从该组中挑出具体的某台服务器出来，把请求转发之。若该服务器超载，那么根据最少连接数算法，在集群的非本服务器组的服务器中，找出一台服务器出来，加入本服务器组，然后把请求转发之。






